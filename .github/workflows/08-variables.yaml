name: 08 - Using Variables

on:
  # push: (WRAP UP)
  workflow_dispatch:

env:
  WORKFLOW_VAR: "I am a workflow env var"
  OVERWRITTEN: "I will be overwritten"
  UNDEFINED_VAR_WITH_DEFAULT: ${{vars.UNDEFINED_VAR || 'default value'}}

jobs:
  echo:
    runs-on: ubuntu-latest
    env:
      JOB_VAR: "I am a job env var"
      OVERWRITTEN: "I have been overwritten at the job level"
    steps:
      - name: Print Env Variables
        env:
          # Step variable은 shell에서 env variable로도 access 가능하다
          STEP_VAR: "상수일때는 UPPER CAMEL CASE"
          step_var2: "이렇게도 정의 가능하나, -(dash)는 사용하지 않는다"
        run: |
          echo "Step env var: ${{env.STEP_VAR}}"
          echo "Step env var 2: $step_var2"
          echo "Job env var 2: ${{env.JOB_VAR}}"
          echo "Workflow env var: ${{env.WORKFLOW_VAR}}"
          echo "Overwritten: ${{env.OVERWRITTEN}}"
        # $만으로도 접근 가능하나(env variable)
        # 그러나 이 때는 execution일 때 변수로 인식되어 아직 치환되지 않는다
        # env context의 variable은 미리 치환된다
        # bash에서 -는 옵션을 줄 때 쓰므로 변수명에 -이 들어가있으면
        # 문법에러가 발생한다

      - name: Overwrite job variable
        env:
          OVERWRITTEN: "I have been overwritten at the step level"
        run: |
          echo "Step env var: ${{env.OVERWRITTEN}}"

  # 스퀴글리라인은 multiple workflow의 변수들이 존재하는지를
  # 이 single workflow는 모르기 떄문이다
  echo2:
    runs-on: ubuntu-latest
    steps:
      - name: Print Variables
        run: |
          echo "Org var: ${{vars.ORG_VAR}}"
          echo "Org overwritten var: ${{vars.OVERWRITTEN_VAR}}"
          echo "Repo var ${{vars.REPOSITORY_VAR}}"

  echo-prod:
    runs-on: ubuntu-latest
    environment: Prod
    # "repository의 prod를 사용해줘"
    steps:
      - name: Print Variables
        run: |
          echo "Org var: ${{vars.ORG_VAR}}"
          echo "Org overwritten var: ${{vars.OVERWRITTEN_VAR}}"
          echo "Repo var ${{vars.REPOSITORY_VAR}}"
          echo "Repo var ${{vars.TARGET_VAR}}"

  echo-undefined:
    runs-on: ubuntu-latest
    steps:
      - name: Print Undefined Variables
        run: |
          echo "Org var: ${{vars.UNDEFINED_VAR || 'default value'}}"
          echo "Org var: ${{vars.UNDEFINED_VAR_WITH_DEFAULT}}"
        # 1회성으로 default를 준다면 이렇게 할 수 있는데, 이 변수를 쓸때마다
        # 이렇게 short-circuiting을 해주면 코드가 길어지니까,
        # Single workflow env에 선언해서 전체적으로 사용할 수 있게 해준다.
